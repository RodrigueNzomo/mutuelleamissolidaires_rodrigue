# Utiliser une image Node.js pour la construction
FROM node:18-alpine as build

# Définir le répertoire de travail dans le conteneur
WORKDIR /app

# Copier les fichiers de configuration et les dépendances
COPY package*.json ./

# Installer les dépendances
RUN npm install

# Copier les fichiers de l'application et générer la version de production
COPY . .
RUN npm run build

# Utiliser une image Nginx pour servir le frontend en production
FROM nginx:alpine

# Copier les fichiers de construction vers le répertoire de Nginx
COPY --from=build /app/build /usr/share/nginx/html

# Copier le fichier de configuration Nginx personnalisé
COPY nginx.config /etc/nginx/conf.d/default.conf

# Exposer le port
EXPOSE 80

# Démarrer Nginx
CMD ["nginx", "-g", "daemon off;"]

# Dockerfile pour le frontend :

# Utilise Node.js pour construire le projet React ou Vue (ou autre).
# Crée une version optimisée de l'application frontend avec npm run build.
# Utilise une image Nginx pour servir le contenu statique généré.
# Copie le fichier nginx.config pour personnaliser les règles de routage.